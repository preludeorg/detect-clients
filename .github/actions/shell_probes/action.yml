name: Deploy (nocturnal / raindrop / vision scripts)
description: Copy script to s3
inputs:
  s3_bucket:
    description: 'Where to push probes'
    required: true
  aws_region:
    description: 'Region to set for aws access'
    required: true
  aws_access_key_id:
    description: 'Access key to use'
    required: true
  aws_secret_access_key:
    description: 'Secret key to use'
    required: true
  slack_notification:
    description: 'Where to send the slack payload'

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${{ inputs.aws_region }}
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}

    - name: Copy files to the s3 with the AWS CLI
      shell: bash
      run: |

        NIX_FILES=(shell/probe/nocturnal.sh,nocturnal/nocturnal shell/probe/vision.sh,vision/vision)
        NIX_ARCHS=(darwin-arm64 darwin-x86_64 linux-arm64 linux-x86_64)

        for f in ${NIX_FILES[@]}; do
          src=${f%,*}
          dst=${f#*,}

          sha256=`openssl sha256 --binary ${src}  | base64`
          sha1=`openssl sha1 --binary ${src}  | base64`

          for a in ${NIX_ARCHS[@]}; do
            aws s3api put-object --bucket ${{ inputs.s3_bucket }} --key prelude/probes/${dst}_${a} --body $src --metadata "Checksumsha1=${sha1}" --checksum-sha256 ${sha256}
          done
        done

        WIN_FILES=(shell/probe/raindrop.ps1,raindrop/raindrop)
        WIN_ARCHS=(windows-x86_64)

        for f in ${WIN_FILES[@]}; do
          src=${f%,*}
          dst=${f#*,}

          sha256=`openssl sha256 --binary ${src}  | base64`
          sha1=`openssl sha1 --binary ${src}  | base64`

          for a in ${WIN_ARCHS[@]}; do
            aws s3api put-object --bucket ${{ inputs.s3_bucket }} --key prelude/probes/${dst}_${a} --body $src --metadata "Checksumsha1=${sha1}" --checksum-sha256 ${sha256}
          done
        done


    - name: Notify Slack
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Probe Deploy (${{ github.triggering_actor }}): ${{ github.ref }} - ${{ job.status }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Probe Deploy (${{ github.triggering_actor }}): ${{ github.ref }} ${{ job.status }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_notification }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
