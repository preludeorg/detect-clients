name: Release Python CLI and SDK

on:
  workflow_dispatch:
    inputs:
      do_cli:
        required: true
        type: boolean
      do_sdk:
        required: true
        type: boolean

jobs:
  release-build-cli:
    if: ${{ inputs.do_cli == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: build cli release dist
        working-directory: python/cli
        run: |
          python -m pip install -U build
          python -m build
      - name: upload cli release dist
        uses: actions/upload-artifact@v4
        with:
          name: cli-release-dist
          path: python/cli/dist/
  pypi-publish-cli:
    if: ${{ inputs.do_cli == true }}
    runs-on: ubuntu-latest
    needs:
      - release-build-cli
    permissions:
      id-token: write
    steps:
      - name: download cli release dist
        uses: actions/download-artifact@v4
        with:
          name: cli-release-dists
          path: cli-dist/
      - name: Publish cli release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@@release/v1
        with:
          packages-dir: cli-dist
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Python CLI published (${{ github.triggering_actor }}): ${{ github.ref }} - ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Python CLI published (${{ github.triggering_actor }}): ${{ github.ref }} - ${{ job.status }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.US1_SLACK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  release-build-sdk:
    if: ${{ inputs.do_sdk == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: build cli release dist
        working-directory: python/cli
        run: |
          python -m pip install -U build
          python -m build
      - name: upload cli release dist
        uses: actions/upload-artifact@v4
        with:
          name: cli-release-dist
          path: python/cli/dist/
      - name: build sdk release dist
        working-directory: python/sdk
        run: |
          python -m pip install --upgrade build
          python -m build
      - name: upload sdk release dist
        uses: actions/upload-artifact@v4
        with:
          name: sdk-release-dist
          path: python/sdk/dist/
  pypi-publish-sdk:
    if: ${{ inputs.do_sdk == true }}
    runs-on: ubuntu-latest
    needs:
      - release-build-cli
    permissions:
      id-token: write
    steps:
      - name: download cli release dist
        uses: actions/download-artifact@v4
        with:
          name: cli-release-dists
          path: cli-dist/
      - name: Publish cli release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@@release/v1
        with:
          packages-dir: cli-dist
      - name: download cli release dist
        uses: actions/download-artifact@v4
        with:
          name: cli-release-dists
          path: cli-dist/
      - name: Publish sdl release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@@release/v1
        with:
          packages-dir: sdk-dist
      - name: Notify Slack
        if: ${{ always() }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Python SDK published (${{ github.triggering_actor }}): ${{ github.ref }} - ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Python SDK published (${{ github.triggering_actor }}): ${{ github.ref }} - ${{ job.status }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.US1_SLACK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
